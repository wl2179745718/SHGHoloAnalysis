clear variables; close all; clc; addpath(genpath('../Functions'));
% Plot the total field along the three transects, as a plane wave is
% scattered by a sphere centered at the origin. The plane wave
% propagates in the +z direction. See Fig. 11-25 in [Balanis1989] for
% the geometry.
%
%
% Optional:
%
% 'radius'        radius of the sphere relative to the background
%                 wavelength). Default to 1.
%
% 'sphere'        object of DielectricMaterial. Default to
%                 DielectricMaterial(4.0, 0.0).
%
% 'background'    object of DielectricMaterial. Default to
%                 DielectricMaterial(1.0, 0.0).
%
% 'frequency'     scalar to denote the frequency of the plane
%                 wave. Default to 1 Hz.
%
% 'domain_size'   6x1 vector to specify the size of the domain in
%                 the format  [x_min; x_max; y_min; y_max; z_min; z_max]
%                 (relative to the background wavelength). Default
%                 to [-0.2; 2; -0.2; 2; -0.2; 2].
%
% 'N'             3x1 vector to specify the number points to
%                 evaluate the fields along the three axis.
%                 Default to [44; 44; 44].
%
% 'S'             3x1 vector to specify the slice on which the
%                 fields are evaluated. Default to [4;4;60]
%
% 'workspace_name'  workspace name to store the
%                   data. Default to 'dielectric_sphere'.
%

ps          = .105/2;                 % pixel size (x,y,z) in object space (microns)
lambda      = 0.5;                  % central wavelength (microns)  
c           = 299792458;
n_imm       = 1.0;                % refractive index of immersion media
nsphere=1.2;%1.2;
n=[nsphere,n_imm];
k0=(2*pi)/lambda;
k=k0*n_imm;
N           = [2^9, 2^9, 2^9];                  % lateral pixel dimension 
L = ps*N;
delta = [ps, ps, ps];
deltaf = 1./L;
NA_in = 0;%0.4;
NA_in = round(NA_in/deltaf(1)*n_imm/lambda)*deltaf(1)/n_imm*lambda;

rad = 1;
sphere=DielectricMaterial(nsphere.^2, 0.0);
background=DielectricMaterial(1.0, 0.0);
frequency=c/lambda;
domain_size=[-L/2; L/2; -L/2; L/2; -L/2; L/2]./lambda;
%N=[45; 45; 45];
workspace_name='dielectric_sphere';
verbose=0;

wavelength = getWavelength(background,frequency);
x          = linspace(domain_size(1), domain_size(2), N(1));
y          = linspace(domain_size(3), domain_size(4), N(2));
z          = L(3)/2;

E_r        = zeros([length(x) length(y)]);
E_theta    = zeros([length(x) length(y)]);
E_phi      = zeros([length(x) length(y)]);
E_x        = zeros([length(x) length(y)]);
E_y        = zeros([length(x) length(y)]);
E_z        = zeros([length(x) length(y)]);
H_r        = zeros([length(x) length(y)]);
H_theta    = zeros([length(x) length(y)]);
H_phi      = zeros([length(x) length(y)]);

E_sca = zeros([length(x) length(y)]);

for iX = 1:N(1)
    iX
    for iY = 1:N(2)
        [E_r(iX,iY), E_theta(iX,iY), E_phi(iX,iY), ...
         H_r(iX,iY), H_theta(iX,iY), H_phi(iX,iY)] ...
            = getDielectricSphereFieldUnderPlaneWave(rad*wavelength, ...
                                                     sphere, ...
                                                     background, ...
                                                     [x(iX);y(iY);z].*wavelength,...
                                                     frequency);
        [~, theta, phi] = cartToSph(x(iX), y(iY), z);
        % pg. 924 in [Balanis1989].
        A = [sin(theta)*cos(phi) cos(theta)*cos(phi) -sin(phi);
             sin(theta)*sin(phi) cos(theta)*sin(phi)  cos(phi);
             cos(theta)         -cos(theta)             0];
        tempt = A * [E_r(iX,iY); E_theta(iX,iY); E_phi(iX,iY)];
        E_x(iX,iY) = tempt(1);
        E_y(iX,iY) = tempt(2);
        E_z(iX,iY) = tempt(3);
    end
end

figure
set(gcf, 'Position', get(0, 'Screensize'));
colormap(gray(256));
subplot(2, 3, 1)
imagesc(x,y,abs(E_x))
axis square
colorbar
title('|E_x|')

subplot(2, 3, 4)
imagesc(x,y,angle(E_x))
axis square
colorbar
title('\angle E_x')

subplot(2, 3, 2)
imagesc(x,y,abs(E_y))
axis square
colorbar
title('|E_y|')

subplot(2, 3, 5)
imagesc(x,y,angle(E_y))
axis square
colorbar
title('\angle E_y')

subplot(2, 3, 3)
imagesc(x,y,abs(E_z))
axis square
colorbar
title('|E_z|')

subplot(2, 3, 6)
imagesc(x,y,angle(E_z))
axis square
colorbar
title('\angle E_z')

phi_inc = 0;

E_p = sqrt( E_x.^2 + E_y.^2 );
I_p = abs(E_p).^2;

[X,Y]=meshgrid(x,y);
X_1d = reshape(X, [1 size(X,1)*size(X,2)]);
Y_1d = reshape(Y, [1 size(Y,1)*size(Y,2)]);
theta1D = 0*X_1d;
V1 = [tan(phi_inc) 0 1];
for ii = 1:size(theta1D,2)
    V2 = [X_1d(ii) Y_1d(ii) z];
    theta1D(ii) = atan2(norm(cross(V1,V2)),dot(V1,V2));
end

[an,bn,RCSTheta1D,ETheta1D] = mieHKURCS(rad,c/lambda,n_imm^2,1,nsphere^2,1,40,theta1D);
ETheta = reshape(ETheta1D, [size(X,1) size(X,2)]);

R = sqrt(X.^2 + Y.^2 + z^2);
E_sca_Mie = ETheta./( exp(1i*k*z)/z ).*( exp(1i*k*R)./R );
%E_sca_Mie = E_sca_Mie./E_sca_Mie(end/2,end/2);

 
figure
subplot(2, 3, 1)
imagesc(x,y,abs(E_p))
axis square
colorbar
title('|E_{\perp}|')

subplot(2, 3, 2)
imagesc(x,y,angle(E_p))
axis square
colorbar
title('\angle E_{\perp}')

subplot(2, 3, 3)
imagesc(x,y,I_p)
axis square
colorbar
title('I_{\perp}')

subplot(2, 3, 4)
imagesc(x,y,abs(E_sca_Mie))
axis square
colorbar
title('|E_{Mie}|')

subplot(2, 3, 5)
imagesc(x,y,angle(E_sca_Mie))
axis square
colorbar
title('\angle E_{Mie}')

subplot(2, 3, 6)
imagesc(x,y,abs(E_sca_Mie).^2)
axis square
colorbar
title('I_{Mie}')




figure
subplot(2, 3, 1)
imagesc(x,y,abs(E_x))
axis square
colorbar
title('|E_{\perp}|')

subplot(2, 3, 2)
imagesc(x,y,angle(E_x))
axis square
colorbar
title('\angle E_{\perp}')

subplot(2, 3, 3)
imagesc(x,y,abs(E_x))
axis square
colorbar
title('I_{\perp}')

subplot(2, 3, 4)
imagesc(x,y,abs(E_sca_Mie))
axis square
colorbar
title('|E_{Mie}|')

subplot(2, 3, 5)
imagesc(x,y,angle(E_sca_Mie))
axis square
colorbar
title('\angle E_{Mie}')

subplot(2, 3, 6)
imagesc(x,y,abs(E_sca_Mie).^2)
axis square
colorbar
title('I_{Mie}')
